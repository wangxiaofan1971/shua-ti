//#include<iostream>
//#include<string>
//#include<list>
//#include<vector>
//#include<stack>
//#include<set>
//using namespace std;
///*找出数组中重复的数字。
//在一个长度为 n 的数组 nums 里的所有数字都在 0～n-1 的范围内。
//数组中某些数字是重复的，但不知道有几个数字重复了，也不知道每个数字重复了几次。
//请找出数组中任意一个重复的数字。*/
//
///*示例 1：
//输入：
//[2, 3, 1, 0, 2, 5, 3]
//输出：2 或 3 */
//
//class Solution {
//public:
//	int findRepeatNumber(vector<int>& nums) {
//		int n = nums.size();
//		multiset<int> m;
//		for (size_t i = 0; i<n; i++)
//		{
//			m.insert(nums[i]);
//		}
//		for (multiset<int>::iterator it = m.begin(); it != m.end(); ++it)
//		{
//			if (*it == (*++it))
//			{
//				return *it;
//			}
//			it--;
//		}
//		return 0;
//	}
//};
//void test()
//{
//
//}
//int main() {
//	
//	test();
//	
//	system("pause");
//	return 0;
//}