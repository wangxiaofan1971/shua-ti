//#include<iostream>
//#include<string>
//#include<list>
//#include<vector>
//#include<stack>
//#include<set>
//#include<algorithm>
//#include <functional>
//using namespace std;
//
////写一个函数，输入 n ，求斐波那契（Fibonacci）数列的第 n 项（即 F(N)）。斐波那契数列的定义如下：
////F(0) = 0, F(1) = 1
////F(N) = F(N - 1) + F(N - 2), 其中 N > 1.
//
////斐波那契数列由 0 和 1 开始，之后的斐波那契数就是由之前的两数相加而得出。
////答案需要取模 1e9 + 7（1000000007），如计算初始结果为：1000000008，请返回 1。
//
////示例 1：
////
////输入：n = 2
////输出：1
////示例 2：
////
////输入：n = 5
////输出：5
//class Solution {
//public:
//	int fib(int n) {
//		int f0 = 0;
//		int f1 = 1;
//		int fn = 1;
//		if (n == 0)
//		{
//			return 0;
//		}
//		else if (n == 1)
//		{
//			return 1;
//		}
//		else
//		{
//			modulus<int> a;
//			for (size_t i = 1; i<n; ++i)
//			{
//				fn = f0 + f1;
//				fn = a(fn, 1000000007);
//				f0 = f1;
//				f1 = fn;
//			}
//			return fn;
//		}
//
//	}
//};
//void test()
//{
//
//}
//int main() {
//
//	test();
//
//	system("pause");
//	return 0;
//}
////过程中需要不断取余
